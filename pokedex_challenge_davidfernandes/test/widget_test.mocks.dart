// Mocks generated by Mockito 5.4.0 from annotations
// in pokedex_challenge_davidfernandes/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i8;

import 'package:get/get.dart' as _i3;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex_challenge_davidfernandes/src/models/pokemon_model.dart'
    as _i6;
import 'package:pokedex_challenge_davidfernandes/src/resources/pokedex_api_provider/pokedex_api_provider.dart'
    as _i4;
import 'package:pokedex_challenge_davidfernandes/src/resources/repository.dart'
    as _i2;

import 'widget_test.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRepository_0 extends _i1.SmartFake implements _i2.Repository {
  _FakeRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxList_1<E> extends _i1.SmartFake implements _i3.RxList<E> {
  _FakeRxList_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_2<T> extends _i1.SmartFake
    implements _i3.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePokedexApiProvider_3 extends _i1.SmartFake
    implements _i4.PokedexApiProvider {
  _FakePokedexApiProvider_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PokedexControllerTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokedexControllerTest extends _i1.Mock
    implements _i5.PokedexControllerTest {
  MockPokedexControllerTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.Repository);
  @override
  _i3.RxList<_i6.PokemonModel> get pokemons => (super.noSuchMethod(
        Invocation.getter(#pokemons),
        returnValue: _FakeRxList_1<_i6.PokemonModel>(
          this,
          Invocation.getter(#pokemons),
        ),
      ) as _i3.RxList<_i6.PokemonModel>);
  @override
  set pokemons(_i3.RxList<_i6.PokemonModel>? _pokemons) => super.noSuchMethod(
        Invocation.setter(
          #pokemons,
          _pokemons,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i3.InternalFinalCallback<void>);
  @override
  _i3.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i3.InternalFinalCallback<void>);
  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);
  @override
  dynamic getPokemonModel({required int? id}) =>
      super.noSuchMethod(Invocation.method(
        #getPokemonModel,
        [],
        {#id: id},
      ));
  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Disposer addListener(_i7.GetStateUpdate? listener) => (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i7.Disposer);
  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListenerId(
    Object? id,
    _i8.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Disposer addListenerId(
    Object? key,
    _i7.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i7.Disposer);
  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [RepositoryTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepositoryTest extends _i1.Mock implements _i5.RepositoryTest {
  MockRepositoryTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.PokedexApiProvider get pokedexApiProvider => (super.noSuchMethod(
        Invocation.getter(#pokedexApiProvider),
        returnValue: _FakePokedexApiProvider_3(
          this,
          Invocation.getter(#pokedexApiProvider),
        ),
      ) as _i4.PokedexApiProvider);
  @override
  _i9.Future<List<_i6.PokemonSimpleResult>> fetchPokemons(
          {required int? offSet}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPokemons,
          [],
          {#offSet: offSet},
        ),
        returnValue: _i9.Future<List<_i6.PokemonSimpleResult>>.value(
            <_i6.PokemonSimpleResult>[]),
      ) as _i9.Future<List<_i6.PokemonSimpleResult>>);
  @override
  _i9.Future<_i6.PokemonModel?> fetchPokemonModel({required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPokemonModel,
          [],
          {#id: id},
        ),
        returnValue: _i9.Future<_i6.PokemonModel?>.value(),
      ) as _i9.Future<_i6.PokemonModel?>);
  @override
  _i9.Future<List<_i6.PokemonModel>> fetchEvolutions(
          {required _i6.PokemonModel? pokemon}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchEvolutions,
          [],
          {#pokemon: pokemon},
        ),
        returnValue:
            _i9.Future<List<_i6.PokemonModel>>.value(<_i6.PokemonModel>[]),
      ) as _i9.Future<List<_i6.PokemonModel>>);
}
